------------------FRONT-END-------------------
/home/ubuntu/LdTech-DevApp3
Dockerfile
----------
# Use a specific version of Node.js
FROM node:20-alpine AS development

# Set the working directory
WORKDIR /

# Copy package.json and package-lock.json to the container
COPY package*.json ./

# Install project dependencies
RUN npm install --quiet

# Install global packages (react-scripts and http-server)
RUN npm install -g react-scripts http-server

# Copy the rest of the application code
COPY . .

# Build your application (assuming it's a React app)
RUN npm run build

# Expose the port your application will run on
EXPOSE 3001

# Define the command to run your application
CMD ["http-server", "build", "-p", "3001"]

-------------------------------------------
docker build -f Dockerfile -t src .

docker run -it -p 3001:3001 src

-------------------BACK-END--------------------
/home/ubuntu/LdTech-DevApp3/backend
Dockerfile
----------
FROM node:20-alpine AS development

# Set the working directory in the container
WORKDIR /app

# Install the required packages
RUN npm install cors axios -g nodemon

# Copy only the package.json and package-lock.json files
COPY package*.json ./

# Install production dependencies only
RUN npm ci --quiet --only=production

# Copy the rest of the application code
COPY . .

# Expose the port your application will run on
EXPOSE 3004

# Define the command to start your application
CMD ["npm", "run", "dev"]
-----------------------------
docker build -f Dockerfile -t backend .

docker run -it -p 3004:3004 backend